plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services' // Applica il plugin Google Services
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk') // Assicura che Flutter SDK sia definito
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK non trovato. Definisci la posizione con flutter.sdk nel file local.properties.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')?.toInteger() ?: 1
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: "1.0"

apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "com.crozbenz.mathquiz"
    compileSdkVersion 34 // Aggiornato a SDK 34

    defaultConfig {
        applicationId "com.crozbenz.mathquiz"
        minSdkVersion 21 // O il valore minimo richiesto dalle tue dipendenze
        targetSdkVersion 34 // Aggiornato a SDK 34
        versionCode flutterVersionCode
        versionName flutterVersionName
        multiDexEnabled true // Abilita MultiDex se necessario
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17 // Richiesto per AGP 8.x
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17' // Aggiornato per Java 17
    }

    buildTypes {
        release {
            // Aggiungi la tua configurazione di firma per il build di release.
            // Attualmente firmato con le chiavi di debug per permettere `flutter run --release`.
            signingConfig signingConfigs.debug
            minifyEnabled false // Imposta a true per abilitare la riduzione del codice
            shrinkResources false // Imposta a true per ridurre le risorse
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:32.2.2') // Aggiornato alla versione più recente
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-firestore'
    implementation 'androidx.multidex:multidex:2.0.1' // Necessario se multiDexEnabled è true
}

// Il plugin Google Services deve essere applicato dopo il blocco android
apply plugin: 'com.google.gms.google-services'
